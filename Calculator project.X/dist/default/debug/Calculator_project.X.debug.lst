

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 15 19:37:36 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Generated 17/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4620 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     
    51                           	psect	idataCOMRAM
    52   001016                     __pidataCOMRAM:
    53                           	callstack 0
    54                           
    55                           ;initializer for _port_registers
    56   001016  80                 	db	128
    57   001017  0F                 	db	15
    58   001018  81                 	db	129
    59   001019  0F                 	db	15
    60   00101A  82                 	db	130
    61   00101B  0F                 	db	15
    62   00101C  83                 	db	131
    63   00101D  0F                 	db	15
    64   00101E  84                 	db	132
    65   00101F  0F                 	db	15
    66                           
    67                           ;initializer for _lat_registers
    68   001020  89                 	db	137
    69   001021  0F                 	db	15
    70   001022  8A                 	db	138
    71   001023  0F                 	db	15
    72   001024  8B                 	db	139
    73   001025  0F                 	db	15
    74   001026  8C                 	db	140
    75   001027  0F                 	db	15
    76   001028  8D                 	db	141
    77   001029  0F                 	db	15
    78                           
    79                           ;initializer for _tris_registers
    80   00102A  92                 	db	146
    81   00102B  0F                 	db	15
    82   00102C  93                 	db	147
    83   00102D  0F                 	db	15
    84   00102E  94                 	db	148
    85   00102F  0F                 	db	15
    86   001030  95                 	db	149
    87   001031  0F                 	db	15
    88   001032  96                 	db	150
    89   001033  0F                 	db	15
    90                           
    91                           ;initializer for _keypad1
    92   001034  02                 	db	2
    93   001035  0A                 	db	10
    94   001036  12                 	db	18
    95   001037  1A                 	db	26
    96   001038  62                 	db	98
    97   001039  6A                 	db	106
    98   00103A  72                 	db	114
    99   00103B  7A                 	db	122
   100                           
   101                           ;initializer for _lcd_1
   102   00103C  03                 	db	3
   103   00103D  0B                 	db	11
   104   00103E  13                 	db	19
   105   00103F  1B                 	db	27
   106   001040  23                 	db	35
   107   001041  2B                 	db	43
   108                           
   109                           	psect	smallconst
   110   001000                     __psmallconst:
   111                           	callstack 0
   112   001000  00                 	db	0
   113   001001                     _btn_values:
   114                           	callstack 0
   115   001001  37                 	db	55
   116   001002  38                 	db	56
   117   001003  39                 	db	57
   118   001004  2F                 	db	47
   119   001005  34                 	db	52
   120   001006  35                 	db	53
   121   001007  36                 	db	54
   122   001008  2A                 	db	42
   123   001009  31                 	db	49
   124   00100A  32                 	db	50
   125   00100B  33                 	db	51
   126   00100C  2D                 	db	45
   127   00100D  23                 	db	35
   128   00100E  30                 	db	48
   129   00100F  3D                 	db	61
   130   001010  2B                 	db	43
   131   001011                     __end_of_btn_values:
   132                           	callstack 0
   133   000000                     _PORTE	set	3972
   134   000000                     _PORTD	set	3971
   135   000000                     _PORTC	set	3970
   136   000000                     _PORTB	set	3969
   137   000000                     _PORTA	set	3968
   138   000000                     _LATA	set	3977
   139   000000                     _TRISA	set	3986
   140   000000                     _TRISE	set	3990
   141   000000                     _TRISD	set	3989
   142   000000                     _TRISC	set	3988
   143   000000                     _TRISB	set	3987
   144   000000                     _LATE	set	3981
   145   000000                     _LATD	set	3980
   146   000000                     _LATC	set	3979
   147   000000                     _LATB	set	3978
   148   001011                     STR_1:
   149   001011  25                 	db	37
   150   001012  69                 	db	105	;'i'
   151   001013  00                 	db	0
   152   001014  00                 	db	0	; dummy byte at the end
   153   000000                     
   154                           ; #config settings
   155                           
   156                           	psect	cinit
   157   001042                     __pcinit:
   158                           	callstack 0
   159   001042                     start_initialization:
   160                           	callstack 0
   161   001042                     __initialization:
   162                           	callstack 0
   163                           
   164                           ; Initialize objects allocated to COMRAM (44 bytes)
   165                           ; load TBLPTR registers with __pidataCOMRAM
   166   001042  0E16               	movlw	low __pidataCOMRAM
   167   001044  6EF6               	movwf	tblptrl,c
   168   001046  0E10               	movlw	high __pidataCOMRAM
   169   001048  6EF7               	movwf	tblptrh,c
   170   00104A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   171   00104C  6EF8               	movwf	tblptru,c
   172   00104E  EE00  F001         	lfsr	0,__pdataCOMRAM
   173   001052  EE10 F02C          	lfsr	1,44
   174   001056                     copy_data0:
   175   001056  0009               	tblrd		*+
   176   001058  CFF5 FFEE          	movff	tablat,postinc0
   177   00105C  50E5               	movf	postdec1,w,c
   178   00105E  50E1               	movf	fsr1l,w,c
   179   001060  E1FA               	bnz	copy_data0
   180   001062                     end_of_initialization:
   181                           	callstack 0
   182   001062                     __end_of__initialization:
   183                           	callstack 0
   184   001062  0E00               	movlw	low (__Lmediumconst shr (0+16))
   185   001064  6EF8               	movwf	tblptru,c
   186   001066  0100               	movlb	0
   187   001068  EF36  F008         	goto	_main	;jump to C main() function
   188                           
   189                           	psect	dataCOMRAM
   190   000001                     __pdataCOMRAM:
   191                           	callstack 0
   192   000001                     _port_registers:
   193                           	callstack 0
   194   000001                     	ds	10
   195   00000B                     _lat_registers:
   196                           	callstack 0
   197   00000B                     	ds	10
   198   000015                     _tris_registers:
   199                           	callstack 0
   200   000015                     	ds	10
   201   00001F                     _keypad1:
   202                           	callstack 0
   203   00001F                     	ds	8
   204   000027                     _lcd_1:
   205                           	callstack 0
   206   000027                     	ds	6
   207                           
   208                           	psect	cstackCOMRAM
   209   000000                     __pcstackCOMRAM:
   210                           	callstack 0
   211   000000                     
   212                           ; 2 bytes @ 0x0
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 81 in file "application.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;  ret             1    0        unsigned char 
   223 ;; Return value:  Size  Location     Type
   224 ;;                  2   10[None  ] int 
   225 ;; Registers used:
   226 ;;		wreg, status,2, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : 0/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   236 ;;Total ram usage:        0 bytes
   237 ;; Hardware stack levels required when called: 1
   238 ;; This function calls:
   239 ;;		_application_intialize
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text0
   246   00106C                     __ptext0:
   247                           	callstack 0
   248   00106C                     _main:
   249                           	callstack 30
   250   00106C                     
   251                           ;application.c: 83:     application_intialize();
   252   00106C  EC3C  F008         	call	_application_intialize	;wreg free
   253   001070                     l11:
   254   001070  EF38  F008         	goto	l11
   255   001074  EF00  F000         	goto	start
   256   001078                     __end_of_main:
   257                           	callstack 0
   258                           
   259 ;; *************** function _application_intialize *****************
   260 ;; Defined at:
   261 ;;		line 92 in file "application.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  ret             1    0        unsigned char 
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    wreg      void 
   268 ;; Registers used:
   269 ;;		wreg, status,2
   270 ;; Tracked objects:
   271 ;;		On entry : 0/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   279 ;;Total ram usage:        0 bytes
   280 ;; Hardware stack levels used: 1
   281 ;; This function calls:
   282 ;;		Nothing
   283 ;; This function is called by:
   284 ;;		_main
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288                           	psect	text1
   289   001078                     __ptext1:
   290                           	callstack 0
   291   001078                     _application_intialize:
   292                           	callstack 30
   293   001078  0012               	return		;funcret
   294   00107A                     __end_of_application_intialize:
   295                           	callstack 0
   296                           
   297                           	psect	rparam
   298   000000                     
   299                           	psect	config
   300                           
   301                           ; Padding undefined space
   302   300000                     	org	3145728
   303   300000  FF                 	db	255
   304                           
   305                           ;Config register CONFIG1H @ 0x300001
   306                           ;	Oscillator Selection bits
   307                           ;	OSC = HS, HS oscillator
   308                           ;	Fail-Safe Clock Monitor Enable bit
   309                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   310                           ;	Internal/External Oscillator Switchover bit
   311                           ;	IESO = OFF, Oscillator Switchover mode disabled
   312   300001                     	org	3145729
   313   300001  02                 	db	2
   314                           
   315                           ;Config register CONFIG2L @ 0x300002
   316                           ;	Power-up Timer Enable bit
   317                           ;	PWRT = OFF, PWRT disabled
   318                           ;	Brown-out Reset Enable bits
   319                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   320                           ;	Brown Out Reset Voltage bits
   321                           ;	BORV = 1, 
   322   300002                     	org	3145730
   323   300002  09                 	db	9
   324                           
   325                           ;Config register CONFIG2H @ 0x300003
   326                           ;	Watchdog Timer Enable bit
   327                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   328                           ;	Watchdog Timer Postscale Select bits
   329                           ;	WDTPS = 32768, 1:32768
   330   300003                     	org	3145731
   331   300003  1E                 	db	30
   332                           
   333                           ; Padding undefined space
   334   300004                     	org	3145732
   335   300004  FF                 	db	255
   336                           
   337                           ;Config register CONFIG3H @ 0x300005
   338                           ;	CCP2 MUX bit
   339                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   340                           ;	PORTB A/D Enable bit
   341                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   342                           ;	Low-Power Timer1 Oscillator Enable bit
   343                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   344                           ;	MCLR Pin Enable bit
   345                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   346   300005                     	org	3145733
   347   300005  81                 	db	129
   348                           
   349                           ;Config register CONFIG4L @ 0x300006
   350                           ;	Stack Full/Underflow Reset Enable bit
   351                           ;	STVREN = ON, Stack full/underflow will cause Reset
   352                           ;	Single-Supply ICSP Enable bit
   353                           ;	LVP = OFF, Single-Supply ICSP disabled
   354                           ;	Extended Instruction Set Enable bit
   355                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   356                           ;	Background Debugger Enable bit
   357                           ;	DEBUG = 0x1, unprogrammed default
   358   300006                     	org	3145734
   359   300006  81                 	db	129
   360                           
   361                           ; Padding undefined space
   362   300007                     	org	3145735
   363   300007  FF                 	db	255
   364                           
   365                           ;Config register CONFIG5L @ 0x300008
   366                           ;	Code Protection bit
   367                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   368                           ;	Code Protection bit
   369                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   370                           ;	Code Protection bit
   371                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   372                           ;	Code Protection bit
   373                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   374   300008                     	org	3145736
   375   300008  0F                 	db	15
   376                           
   377                           ;Config register CONFIG5H @ 0x300009
   378                           ;	Boot Block Code Protection bit
   379                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   380                           ;	Data EEPROM Code Protection bit
   381                           ;	CPD = OFF, Data EEPROM not code-protected
   382   300009                     	org	3145737
   383   300009  C0                 	db	192
   384                           
   385                           ;Config register CONFIG6L @ 0x30000A
   386                           ;	Write Protection bit
   387                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   388                           ;	Write Protection bit
   389                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   390                           ;	Write Protection bit
   391                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   392                           ;	Write Protection bit
   393                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   394   30000A                     	org	3145738
   395   30000A  0F                 	db	15
   396                           
   397                           ;Config register CONFIG6H @ 0x30000B
   398                           ;	Configuration Register Write Protection bit
   399                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   400                           ;	Boot Block Write Protection bit
   401                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   402                           ;	Data EEPROM Write Protection bit
   403                           ;	WRTD = OFF, Data EEPROM not write-protected
   404   30000B                     	org	3145739
   405   30000B  E0                 	db	224
   406                           
   407                           ;Config register CONFIG7L @ 0x30000C
   408                           ;	Table Read Protection bit
   409                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   410                           ;	Table Read Protection bit
   411                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   412                           ;	Table Read Protection bit
   413                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   414                           ;	Table Read Protection bit
   415                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   416   30000C                     	org	3145740
   417   30000C  0F                 	db	15
   418                           
   419                           ;Config register CONFIG7H @ 0x30000D
   420                           ;	Boot Block Table Read Protection bit
   421                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   422   30000D                     	org	3145741
   423   30000D  40                 	db	64
   424                           tosu	equ	0xFFF
   425                           tosh	equ	0xFFE
   426                           tosl	equ	0xFFD
   427                           stkptr	equ	0xFFC
   428                           pclatu	equ	0xFFB
   429                           pclath	equ	0xFFA
   430                           pcl	equ	0xFF9
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           prodh	equ	0xFF4
   436                           prodl	equ	0xFF3
   437                           indf0	equ	0xFEF
   438                           postinc0	equ	0xFEE
   439                           postdec0	equ	0xFED
   440                           preinc0	equ	0xFEC
   441                           plusw0	equ	0xFEB
   442                           fsr0h	equ	0xFEA
   443                           fsr0l	equ	0xFE9
   444                           wreg	equ	0xFE8
   445                           indf1	equ	0xFE7
   446                           postinc1	equ	0xFE6
   447                           postdec1	equ	0xFE5
   448                           preinc1	equ	0xFE4
   449                           plusw1	equ	0xFE3
   450                           fsr1h	equ	0xFE2
   451                           fsr1l	equ	0xFE1
   452                           bsr	equ	0xFE0
   453                           indf2	equ	0xFDF
   454                           postinc2	equ	0xFDE
   455                           postdec2	equ	0xFDD
   456                           preinc2	equ	0xFDC
   457                           plusw2	equ	0xFDB
   458                           fsr2h	equ	0xFDA
   459                           fsr2l	equ	0xFD9
   460                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        44
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      0      44
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S962$buffer	PTR unsigned char  size(2) Largest target is 0

    S962$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
              _application_intialize
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      0      2C       1       34.6%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      39        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 15 19:37:36 2023

                           l11 1070                             l12 1070                             l17 1078  
                         l1134 1078                           l1232 106C                           l1234 106C  
                         STR_1 1011                           _LATA 0F89                           _LATB 0F8A  
                         _LATC 0F8B                           _LATD 0F8C                           _LATE 0F8D  
      ??_application_intialize 0000                           _main 106C                           fsr1l 0FE1  
                         start 0000                   ___param_bank 0000                          ?_main 0000  
                        _PORTA 0F80                          _PORTB 0F81                          _PORTC 0F82  
                        _PORTD 0F83                          _PORTE 0F84                          _TRISA 0F92  
                        _TRISB 0F93                          _TRISC 0F94                          _TRISD 0F95  
                        _TRISE 0F96                          _lcd_1 0027                          tablat 0FF5  
              __initialization 1042                   __end_of_main 1078                  _lat_registers 000B  
                       ??_main 0000                  __activetblptr 0002                         isa$std 0001  
                 __pdataCOMRAM 0001                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8                     __accesstop 0080  
      __end_of__initialization 1062                  ___rparam_used 0001                 __pcstackCOMRAM 0000  
__end_of_application_intialize 107A                     _btn_values 1001                 _tris_registers 0015  
                      __Hparam 0000                        __Lparam 0000                   __psmallconst 1000  
                      __pcinit 1042                        __ramtop 1000                        __ptext0 106C  
                      __ptext1 1078                        _keypad1 001F           end_of_initialization 1062  
                __Lmediumconst 0000                        postdec1 0FE5                        postinc0 0FEE  
                __pidataCOMRAM 1016            start_initialization 1042          _application_intialize 1078  
                  __smallconst 1000                      copy_data0 1056         ?_application_intialize 0000  
                     __Hrparam 0000                       __Lrparam 0000             __end_of_btn_values 1011  
                     isa$xinst 0000                 _port_registers 0001  
