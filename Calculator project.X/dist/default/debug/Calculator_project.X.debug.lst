

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 15 19:41:31 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 17/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   0014A8                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _port_registers
    64   0014A8  80                 	db	128
    65   0014A9  0F                 	db	15
    66   0014AA  81                 	db	129
    67   0014AB  0F                 	db	15
    68   0014AC  82                 	db	130
    69   0014AD  0F                 	db	15
    70   0014AE  83                 	db	131
    71   0014AF  0F                 	db	15
    72   0014B0  84                 	db	132
    73   0014B1  0F                 	db	15
    74                           
    75                           ;initializer for _lat_registers
    76   0014B2  89                 	db	137
    77   0014B3  0F                 	db	15
    78   0014B4  8A                 	db	138
    79   0014B5  0F                 	db	15
    80   0014B6  8B                 	db	139
    81   0014B7  0F                 	db	15
    82   0014B8  8C                 	db	140
    83   0014B9  0F                 	db	15
    84   0014BA  8D                 	db	141
    85   0014BB  0F                 	db	15
    86                           
    87                           ;initializer for _tris_registers
    88   0014BC  92                 	db	146
    89   0014BD  0F                 	db	15
    90   0014BE  93                 	db	147
    91   0014BF  0F                 	db	15
    92   0014C0  94                 	db	148
    93   0014C1  0F                 	db	15
    94   0014C2  95                 	db	149
    95   0014C3  0F                 	db	15
    96   0014C4  96                 	db	150
    97   0014C5  0F                 	db	15
    98                           
    99                           ;initializer for _keypad1
   100   0014C6  02                 	db	2
   101   0014C7  0A                 	db	10
   102   0014C8  12                 	db	18
   103   0014C9  1A                 	db	26
   104   0014CA  62                 	db	98
   105   0014CB  6A                 	db	106
   106   0014CC  72                 	db	114
   107   0014CD  7A                 	db	122
   108                           
   109                           ;initializer for _lcd_1
   110   0014CE  03                 	db	3
   111   0014CF  0B                 	db	11
   112   0014D0  13                 	db	19
   113   0014D1  1B                 	db	27
   114   0014D2  23                 	db	35
   115   0014D3  2B                 	db	43
   116                           
   117                           	psect	smallconst
   118   001000                     __psmallconst:
   119                           	callstack 0
   120   001000  00                 	db	0
   121   001001                     _btn_values:
   122                           	callstack 0
   123   001001  37                 	db	55
   124   001002  38                 	db	56
   125   001003  39                 	db	57
   126   001004  2F                 	db	47
   127   001005  34                 	db	52
   128   001006  35                 	db	53
   129   001007  36                 	db	54
   130   001008  2A                 	db	42
   131   001009  31                 	db	49
   132   00100A  32                 	db	50
   133   00100B  33                 	db	51
   134   00100C  2D                 	db	45
   135   00100D  23                 	db	35
   136   00100E  30                 	db	48
   137   00100F  3D                 	db	61
   138   001010  2B                 	db	43
   139   001011                     __end_of_btn_values:
   140                           	callstack 0
   141   000000                     _PORTE	set	3972
   142   000000                     _PORTD	set	3971
   143   000000                     _PORTC	set	3970
   144   000000                     _PORTB	set	3969
   145   000000                     _PORTA	set	3968
   146   000000                     _LATA	set	3977
   147   000000                     _TRISA	set	3986
   148   000000                     _TRISE	set	3990
   149   000000                     _TRISD	set	3989
   150   000000                     _TRISC	set	3988
   151   000000                     _TRISB	set	3987
   152   000000                     _LATE	set	3981
   153   000000                     _LATD	set	3980
   154   000000                     _LATC	set	3979
   155   000000                     _LATB	set	3978
   156   001011                     STR_1:
   157   001011  25                 	db	37
   158   001012  69                 	db	105	;'i'
   159   001013  00                 	db	0
   160   001014  00                 	db	0	; dummy byte at the end
   161   000000                     
   162                           ; #config settings
   163                           
   164                           	psect	cinit
   165   0014D4                     __pcinit:
   166                           	callstack 0
   167   0014D4                     start_initialization:
   168                           	callstack 0
   169   0014D4                     __initialization:
   170                           	callstack 0
   171                           
   172                           ; Initialize objects allocated to COMRAM (44 bytes)
   173                           ; load TBLPTR registers with __pidataCOMRAM
   174   0014D4  0EA8               	movlw	low __pidataCOMRAM
   175   0014D6  6EF6               	movwf	tblptrl,c
   176   0014D8  0E14               	movlw	high __pidataCOMRAM
   177   0014DA  6EF7               	movwf	tblptrh,c
   178   0014DC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   179   0014DE  6EF8               	movwf	tblptru,c
   180   0014E0  EE00  F001         	lfsr	0,__pdataCOMRAM
   181   0014E4  EE10 F02C          	lfsr	1,44
   182   0014E8                     copy_data0:
   183   0014E8  0009               	tblrd		*+
   184   0014EA  CFF5 FFEE          	movff	tablat,postinc0
   185   0014EE  50E5               	movf	postdec1,w,c
   186   0014F0  50E1               	movf	fsr1l,w,c
   187   0014F2  E1FA               	bnz	copy_data0
   188   0014F4                     end_of_initialization:
   189                           	callstack 0
   190   0014F4                     __end_of__initialization:
   191                           	callstack 0
   192   0014F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   193   0014F6  6EF8               	movwf	tblptru,c
   194   0014F8  0100               	movlb	0
   195   0014FA  EF9A  F00A         	goto	_main	;jump to C main() function
   196                           
   197                           	psect	dataCOMRAM
   198   000001                     __pdataCOMRAM:
   199                           	callstack 0
   200   000001                     _port_registers:
   201                           	callstack 0
   202   000001                     	ds	10
   203   00000B                     _lat_registers:
   204                           	callstack 0
   205   00000B                     	ds	10
   206   000015                     _tris_registers:
   207                           	callstack 0
   208   000015                     	ds	10
   209   00001F                     _keypad1:
   210                           	callstack 0
   211   00001F                     	ds	8
   212   000027                     _lcd_1:
   213                           	callstack 0
   214   000027                     	ds	6
   215                           
   216                           	psect	cstackCOMRAM
   217   00002D                     __pcstackCOMRAM:
   218                           	callstack 0
   219   00002D                     gpio_pin_direction_intialize@_pin_config:
   220                           	callstack 0
   221   00002D                     gpio_pin_write_logic@_pin_config:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x0
   225   00002D                     	ds	1
   226   00002E                     ??_gpio_pin_direction_intialize:
   227   00002E                     gpio_pin_write_logic@logic:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x1
   231   00002E                     	ds	1
   232   00002F                     ??_gpio_pin_write_logic:
   233                           
   234                           ; 1 bytes @ 0x2
   235   00002F                     	ds	4
   236   000033                     gpio_pin_direction_intialize@ret:
   237                           	callstack 0
   238                           
   239                           ; 1 bytes @ 0x6
   240   000033                     	ds	1
   241   000034                     gpio_pin_write_logic@ret:
   242                           	callstack 0
   243                           
   244                           ; 1 bytes @ 0x7
   245   000034                     	ds	1
   246   000035                     gpio_pin_intialize@_pin_config:
   247                           	callstack 0
   248   000035                     lcd_send_4bits@_lcd_:
   249                           	callstack 0
   250   000035                     lcd_4bit_send_enable_signal@_lcd_:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x8
   254   000035                     	ds	1
   255   000036                     ??_gpio_pin_intialize:
   256   000036                     lcd_send_4bits@_data_command:
   257                           	callstack 0
   258   000036                     lcd_4bit_send_enable_signal@ret:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x9
   262   000036                     	ds	1
   263   000037                     gpio_pin_intialize@ret:
   264                           	callstack 0
   265   000037                     lcd_send_4bits@ret:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0xA
   269   000037                     	ds	1
   270   000038                     keypad_initialize@_keypad_obj:
   271                           	callstack 0
   272   000038                     lcd_4bit_send_command@_lcd_:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0xB
   276   000038                     	ds	1
   277   000039                     keypad_initialize@ret:
   278                           	callstack 0
   279   000039                     lcd_4bit_send_command@command:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0xC
   283   000039                     	ds	1
   284   00003A                     keypad_initialize@rows_counter:
   285                           	callstack 0
   286   00003A                     lcd_4bit_send_command@ret:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0xD
   290   00003A                     	ds	1
   291   00003B                     keypad_initialize@columns_counter:
   292                           	callstack 0
   293   00003B                     lcd_4bit_initialize@_lcd_:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0xE
   297   00003B                     	ds	1
   298   00003C                     ??_lcd_4bit_initialize:
   299                           
   300                           ; 1 bytes @ 0xF
   301   00003C                     	ds	1
   302   00003D                     lcd_4bit_initialize@l_data_pins_counter:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x10
   306   00003D                     	ds	1
   307   00003E                     lcd_4bit_initialize@ret:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x11
   311   00003E                     	ds	1
   312   00003F                     
   313                           ; 1 bytes @ 0x12
   314 ;;
   315 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   316 ;;
   317 ;; *************** function _main *****************
   318 ;; Defined at:
   319 ;;		line 81 in file "application.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;  ret             1    0        unsigned char 
   324 ;; Return value:  Size  Location     Type
   325 ;;                  2   14[None  ] int 
   326 ;; Registers used:
   327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   337 ;;Total ram usage:        0 bytes
   338 ;; Hardware stack levels required when called: 5
   339 ;; This function calls:
   340 ;;		_application_intialize
   341 ;; This function is called by:
   342 ;;		Startup code after reset
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           	psect	text0
   347   001534                     __ptext0:
   348                           	callstack 0
   349   001534                     _main:
   350                           	callstack 26
   351   001534                     
   352                           ;application.c: 83:     application_intialize();
   353   001534  EC91  F00A         	call	_application_intialize	;wreg free
   354   001538                     l15:
   355   001538  EF9C  F00A         	goto	l15
   356   00153C  EF00  F000         	goto	start
   357   001540                     __end_of_main:
   358                           	callstack 0
   359                           
   360 ;; *************** function _application_intialize *****************
   361 ;; Defined at:
   362 ;;		line 92 in file "application.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;  ret             1    0        unsigned char 
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; Hardware stack levels required when called: 4
   383 ;; This function calls:
   384 ;;		_keypad_initialize
   385 ;;		_lcd_4bit_initialize
   386 ;; This function is called by:
   387 ;;		_main
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	text1
   392   001522                     __ptext1:
   393                           	callstack 0
   394   001522                     _application_intialize:
   395                           	callstack 26
   396   001522  0E27               	movlw	low _lcd_1
   397   001524  6E3B               	movwf	lcd_4bit_initialize@_lcd_^0,c
   398   001526  EC26  F009         	call	_lcd_4bit_initialize	;wreg free
   399   00152A  0E1F               	movlw	low _keypad1
   400   00152C  6E38               	movwf	keypad_initialize@_keypad_obj^0,c
   401   00152E  EC9B  F009         	call	_keypad_initialize	;wreg free
   402   001532  0012               	return		;funcret
   403   001534                     __end_of_application_intialize:
   404                           	callstack 0
   405                           
   406 ;; *************** function _lcd_4bit_initialize *****************
   407 ;; Defined at:
   408 ;;		line 28 in file "ECU_Layer/LCD/ecu_lcd.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;  _lcd_           1   14[COMRAM] PTR const struct .
   411 ;;		 -> lcd_1(6), 
   412 ;; Auto vars:     Size  Location     Type
   413 ;;  ret             1   17[COMRAM] unsigned char 
   414 ;;  l_data_pins_    1   16[COMRAM] unsigned char 
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      unsigned char 
   417 ;; Registers used:
   418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   424 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   427 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   428 ;;Total ram usage:        4 bytes
   429 ;; Hardware stack levels used: 1
   430 ;; Hardware stack levels required when called: 3
   431 ;; This function calls:
   432 ;;		_gpio_pin_intialize
   433 ;;		_lcd_4bit_send_command
   434 ;; This function is called by:
   435 ;;		_application_intialize
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text2
   440   00124C                     __ptext2:
   441                           	callstack 0
   442   00124C                     _lcd_4bit_initialize:
   443                           	callstack 26
   444   00124C                     
   445                           ;ECU_Layer/LCD/ecu_lcd.c: 30:     uint8 l_data_pins_counter = 0;
   446   00124C  0E00               	movlw	0
   447   00124E  6E3D               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
   448                           
   449                           ;ECU_Layer/LCD/ecu_lcd.c: 31:     if(((void*)0) == _lcd_){
   450   001250  503B               	movf	lcd_4bit_initialize@_lcd_^0,w,c
   451   001252  A4D8               	btfss	status,2,c
   452   001254  EF2E  F009         	goto	u821
   453   001258  EF30  F009         	goto	u820
   454   00125C                     u821:
   455   00125C  EF34  F009         	goto	l1760
   456   001260                     u820:
   457   001260                     
   458                           ;ECU_Layer/LCD/ecu_lcd.c: 32:         ret = (Std_ReturnType)0x00;
   459   001260  0E00               	movlw	0
   460   001262  6E3E               	movwf	lcd_4bit_initialize@ret^0,c
   461                           
   462                           ;ECU_Layer/LCD/ecu_lcd.c: 33:     }
   463   001264  EF99  F009         	goto	l1796
   464   001268                     l1760:
   465                           
   466                           ;ECU_Layer/LCD/ecu_lcd.c: 35:         ret = gpio_pin_intialize(&(_lcd_->lcd_rs));
   467   001268  C03B  F035         	movff	lcd_4bit_initialize@_lcd_,gpio_pin_intialize@_pin_config
   468   00126C  ECCF  F009         	call	_gpio_pin_intialize	;wreg free
   469   001270  6E3E               	movwf	lcd_4bit_initialize@ret^0,c
   470                           
   471                           ;ECU_Layer/LCD/ecu_lcd.c: 36:         ret = gpio_pin_intialize(&(_lcd_->lcd_en));
   472   001272  283B               	incf	lcd_4bit_initialize@_lcd_^0,w,c
   473   001274  6E35               	movwf	gpio_pin_intialize@_pin_config^0,c
   474   001276  ECCF  F009         	call	_gpio_pin_intialize	;wreg free
   475   00127A  6E3E               	movwf	lcd_4bit_initialize@ret^0,c
   476   00127C                     
   477                           ;ECU_Layer/LCD/ecu_lcd.c: 37:         for(l_data_pins_counter = 0 ; l_data_pins_counter<
      +                          4 ; l_data_pins_counter++){
   478   00127C  0E00               	movlw	0
   479   00127E  6E3D               	movwf	lcd_4bit_initialize@l_data_pins_counter^0,c
   480   001280                     l1768:
   481   001280  503B               	movf	lcd_4bit_initialize@_lcd_^0,w,c
   482   001282  243D               	addwf	lcd_4bit_initialize@l_data_pins_counter^0,w,c
   483   001284  0F02               	addlw	2
   484   001286  6E35               	movwf	gpio_pin_intialize@_pin_config^0,c
   485   001288  ECCF  F009         	call	_gpio_pin_intialize	;wreg free
   486   00128C                     
   487                           ;ECU_Layer/LCD/ecu_lcd.c: 39:         }
   488   00128C  2A3D               	incf	lcd_4bit_initialize@l_data_pins_counter^0,f,c
   489   00128E  0E03               	movlw	3
   490   001290  643D               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter^0,c
   491   001292  EF4D  F009         	goto	u831
   492   001296  EF4F  F009         	goto	u830
   493   00129A                     u831:
   494   00129A  EF40  F009         	goto	l1768
   495   00129E                     u830:
   496   00129E                     
   497                           ;ECU_Layer/LCD/ecu_lcd.c: 41:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
   498   00129E  0E1A               	movlw	26
   499   0012A0  6E3C               	movwf	??_lcd_4bit_initialize^0,c
   500   0012A2  0EF8               	movlw	248
   501   0012A4                     u1167:
   502   0012A4  2EE8               	decfsz	wreg,f,c
   503   0012A6  D7FE               	bra	u1167
   504   0012A8  2E3C               	decfsz	??_lcd_4bit_initialize^0,f,c
   505   0012AA  D7FC               	bra	u1167
   506   0012AC  D000               	nop2	
   507   0012AE  C03B  F038         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
   508   0012B2  0E38               	movlw	56
   509   0012B4  6E39               	movwf	lcd_4bit_send_command@command^0,c
   510   0012B6  ECFE  F009         	call	_lcd_4bit_send_command	;wreg free
   511   0012BA                     
   512                           ;ECU_Layer/LCD/ecu_lcd.c: 43:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
   513   0012BA  0E07               	movlw	7
   514   0012BC  6E3C               	movwf	??_lcd_4bit_initialize^0,c
   515   0012BE  0E7D               	movlw	125
   516   0012C0                     u1177:
   517   0012C0  2EE8               	decfsz	wreg,f,c
   518   0012C2  D7FE               	bra	u1177
   519   0012C4  2E3C               	decfsz	??_lcd_4bit_initialize^0,f,c
   520   0012C6  D7FC               	bra	u1177
   521   0012C8  0000               	nop	
   522   0012CA  C03B  F038         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
   523   0012CE  0E38               	movlw	56
   524   0012D0  6E39               	movwf	lcd_4bit_send_command@command^0,c
   525   0012D2  ECFE  F009         	call	_lcd_4bit_send_command	;wreg free
   526   0012D6                     
   527                           ;ECU_Layer/LCD/ecu_lcd.c: 45:         _delay((unsigned long)((150)*(4000000UL/4000000.0)
      +                          ));
   528   0012D6  0E32               	movlw	50
   529   0012D8                     u1187:
   530   0012D8  2EE8               	decfsz	wreg,f,c
   531   0012DA  D7FE               	bra	u1187
   532   0012DC  C03B  F038         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
   533   0012E0  0E38               	movlw	56
   534   0012E2  6E39               	movwf	lcd_4bit_send_command@command^0,c
   535   0012E4  ECFE  F009         	call	_lcd_4bit_send_command	;wreg free
   536   0012E8  C03B  F038         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
   537   0012EC  0E01               	movlw	1
   538   0012EE  6E39               	movwf	lcd_4bit_send_command@command^0,c
   539   0012F0  ECFE  F009         	call	_lcd_4bit_send_command	;wreg free
   540   0012F4  C03B  F038         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
   541   0012F8  0E02               	movlw	2
   542   0012FA  6E39               	movwf	lcd_4bit_send_command@command^0,c
   543   0012FC  ECFE  F009         	call	_lcd_4bit_send_command	;wreg free
   544   001300  C03B  F038         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
   545   001304  0E06               	movlw	6
   546   001306  6E39               	movwf	lcd_4bit_send_command@command^0,c
   547   001308  ECFE  F009         	call	_lcd_4bit_send_command	;wreg free
   548   00130C  C03B  F038         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
   549   001310  0E0C               	movlw	12
   550   001312  6E39               	movwf	lcd_4bit_send_command@command^0,c
   551   001314  ECFE  F009         	call	_lcd_4bit_send_command	;wreg free
   552   001318  C03B  F038         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
   553   00131C  0E28               	movlw	40
   554   00131E  6E39               	movwf	lcd_4bit_send_command@command^0,c
   555   001320  ECFE  F009         	call	_lcd_4bit_send_command	;wreg free
   556   001324                     
   557                           ;ECU_Layer/LCD/ecu_lcd.c: 53:         ret = lcd_4bit_send_command(_lcd_, 0x80);
   558   001324  C03B  F038         	movff	lcd_4bit_initialize@_lcd_,lcd_4bit_send_command@_lcd_
   559   001328  0E80               	movlw	128
   560   00132A  6E39               	movwf	lcd_4bit_send_command@command^0,c
   561   00132C  ECFE  F009         	call	_lcd_4bit_send_command	;wreg free
   562   001330  6E3E               	movwf	lcd_4bit_initialize@ret^0,c
   563   001332                     l1796:
   564                           
   565                           ;ECU_Layer/LCD/ecu_lcd.c: 58:     return ret;
   566   001332  503E               	movf	lcd_4bit_initialize@ret^0,w,c
   567   001334  0012               	return		;funcret
   568   001336                     __end_of_lcd_4bit_initialize:
   569                           	callstack 0
   570                           
   571 ;; *************** function _lcd_4bit_send_command *****************
   572 ;; Defined at:
   573 ;;		line 69 in file "ECU_Layer/LCD/ecu_lcd.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;  _lcd_           1   11[COMRAM] PTR const struct .
   576 ;;		 -> lcd_1(6), 
   577 ;;  command         1   12[COMRAM] unsigned char 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  ret             1   13[COMRAM] unsigned char 
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      unsigned char 
   582 ;; Registers used:
   583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;Total ram usage:        3 bytes
   594 ;; Hardware stack levels used: 1
   595 ;; Hardware stack levels required when called: 2
   596 ;; This function calls:
   597 ;;		_gpio_pin_write_logic
   598 ;;		_lcd_4bit_send_enable_signal
   599 ;;		_lcd_send_4bits
   600 ;; This function is called by:
   601 ;;		_lcd_4bit_initialize
   602 ;;		_lcd_4bit_send_custome_chr
   603 ;;		_lcd_4bit_set_cursor
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text3
   608   0013FC                     __ptext3:
   609                           	callstack 0
   610   0013FC                     _lcd_4bit_send_command:
   611                           	callstack 26
   612   0013FC                     
   613                           ;ECU_Layer/LCD/ecu_lcd.c: 71:     if(((void*)0) == _lcd_){
   614   0013FC  5038               	movf	lcd_4bit_send_command@_lcd_^0,w,c
   615   0013FE  A4D8               	btfss	status,2,c
   616   001400  EF04  F00A         	goto	u811
   617   001404  EF06  F00A         	goto	u810
   618   001408                     u811:
   619   001408  EF0A  F00A         	goto	l1750
   620   00140C                     u810:
   621   00140C                     
   622                           ;ECU_Layer/LCD/ecu_lcd.c: 72:         ret = (Std_ReturnType)0x00;
   623   00140C  0E00               	movlw	0
   624   00140E  6E3A               	movwf	lcd_4bit_send_command@ret^0,c
   625                           
   626                           ;ECU_Layer/LCD/ecu_lcd.c: 73:     }
   627   001410  EF2A  F00A         	goto	l1752
   628   001414                     l1750:
   629                           
   630                           ;ECU_Layer/LCD/ecu_lcd.c: 75:         ret = gpio_pin_write_logic(&(_lcd_->lcd_rs), GPIO_
      +                          LOW);
   631   001414  C038  F02D         	movff	lcd_4bit_send_command@_lcd_,gpio_pin_write_logic@_pin_config
   632   001418  0E00               	movlw	0
   633   00141A  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
   634   00141C  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
   635   001420  6E3A               	movwf	lcd_4bit_send_command@ret^0,c
   636                           
   637                           ;ECU_Layer/LCD/ecu_lcd.c: 76:         ret = lcd_send_4bits(_lcd_ , command>>4);
   638   001422  C038  F035         	movff	lcd_4bit_send_command@_lcd_,lcd_send_4bits@_lcd_
   639   001426  3839               	swapf	lcd_4bit_send_command@command^0,w,c
   640   001428  0B0F               	andlw	15
   641   00142A  6E36               	movwf	lcd_send_4bits@_data_command^0,c
   642   00142C  EC2C  F00A         	call	_lcd_send_4bits	;wreg free
   643   001430  6E3A               	movwf	lcd_4bit_send_command@ret^0,c
   644                           
   645                           ;ECU_Layer/LCD/ecu_lcd.c: 77:         ret = lcd_4bit_send_enable_signal(_lcd_);
   646   001432  C038  F035         	movff	lcd_4bit_send_command@_lcd_,lcd_4bit_send_enable_signal@_lcd_
   647   001436  EC7F  F00A         	call	_lcd_4bit_send_enable_signal	;wreg free
   648   00143A  6E3A               	movwf	lcd_4bit_send_command@ret^0,c
   649                           
   650                           ;ECU_Layer/LCD/ecu_lcd.c: 78:         ret = lcd_send_4bits(_lcd_ , command);
   651   00143C  C038  F035         	movff	lcd_4bit_send_command@_lcd_,lcd_send_4bits@_lcd_
   652   001440  C039  F036         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
   653   001444  EC2C  F00A         	call	_lcd_send_4bits	;wreg free
   654   001448  6E3A               	movwf	lcd_4bit_send_command@ret^0,c
   655                           
   656                           ;ECU_Layer/LCD/ecu_lcd.c: 79:         ret = lcd_4bit_send_enable_signal(_lcd_);
   657   00144A  C038  F035         	movff	lcd_4bit_send_command@_lcd_,lcd_4bit_send_enable_signal@_lcd_
   658   00144E  EC7F  F00A         	call	_lcd_4bit_send_enable_signal	;wreg free
   659   001452  6E3A               	movwf	lcd_4bit_send_command@ret^0,c
   660   001454                     l1752:
   661                           
   662                           ;ECU_Layer/LCD/ecu_lcd.c: 83:     return ret;
   663   001454  503A               	movf	lcd_4bit_send_command@ret^0,w,c
   664   001456  0012               	return		;funcret
   665   001458                     __end_of_lcd_4bit_send_command:
   666                           	callstack 0
   667                           
   668 ;; *************** function _lcd_send_4bits *****************
   669 ;; Defined at:
   670 ;;		line 442 in file "ECU_Layer/LCD/ecu_lcd.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  _lcd_           1    8[COMRAM] PTR const struct .
   673 ;;		 -> lcd_1(6), 
   674 ;;  _data_comman    1    9[COMRAM] unsigned char 
   675 ;; Auto vars:     Size  Location     Type
   676 ;;  ret             1   10[COMRAM] unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      unsigned char 
   679 ;; Registers used:
   680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;Total ram usage:        3 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 1
   693 ;; This function calls:
   694 ;;		_gpio_pin_write_logic
   695 ;; This function is called by:
   696 ;;		_lcd_4bit_send_command
   697 ;;		_lcd_4bit_send_char_data
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text4
   702   001458                     __ptext4:
   703                           	callstack 0
   704   001458                     _lcd_send_4bits:
   705                           	callstack 26
   706   001458  5035               	movf	lcd_send_4bits@_lcd_^0,w,c
   707   00145A  0F02               	addlw	2
   708   00145C  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
   709   00145E  5036               	movf	lcd_send_4bits@_data_command^0,w,c
   710   001460  0B01               	andlw	1
   711   001462  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
   712   001464  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
   713   001468  5035               	movf	lcd_send_4bits@_lcd_^0,w,c
   714   00146A  0F03               	addlw	3
   715   00146C  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
   716   00146E  90D8               	bcf	status,0,c
   717   001470  3036               	rrcf	lcd_send_4bits@_data_command^0,w,c
   718   001472  0B01               	andlw	1
   719   001474  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
   720   001476  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
   721   00147A  5035               	movf	lcd_send_4bits@_lcd_^0,w,c
   722   00147C  0F04               	addlw	4
   723   00147E  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
   724   001480  4036               	rrncf	lcd_send_4bits@_data_command^0,w,c
   725   001482  42E8               	rrncf	wreg,f,c
   726   001484  0B3F               	andlw	63
   727   001486  0B01               	andlw	1
   728   001488  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
   729   00148A  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
   730   00148E                     
   731                           ;ECU_Layer/LCD/ecu_lcd.c: 447:     ret = gpio_pin_write_logic(&(_lcd_->lcd_data[3]), (_d
      +                          ata_command >> 3) & (uint8)0x01);
   732   00148E  5035               	movf	lcd_send_4bits@_lcd_^0,w,c
   733   001490  0F05               	addlw	5
   734   001492  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
   735   001494  3836               	swapf	lcd_send_4bits@_data_command^0,w,c
   736   001496  46E8               	rlncf	wreg,f,c
   737   001498  0B1F               	andlw	31
   738   00149A  0B01               	andlw	1
   739   00149C  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
   740   00149E  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
   741   0014A2  6E37               	movwf	lcd_send_4bits@ret^0,c
   742                           
   743                           ;ECU_Layer/LCD/ecu_lcd.c: 449:     return ret;
   744   0014A4  5037               	movf	lcd_send_4bits@ret^0,w,c
   745   0014A6  0012               	return		;funcret
   746   0014A8                     __end_of_lcd_send_4bits:
   747                           	callstack 0
   748                           
   749 ;; *************** function _lcd_4bit_send_enable_signal *****************
   750 ;; Defined at:
   751 ;;		line 452 in file "ECU_Layer/LCD/ecu_lcd.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  _lcd_           1    8[COMRAM] PTR const struct .
   754 ;;		 -> lcd_1(6), 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  ret             1    9[COMRAM] unsigned char 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      unsigned char 
   759 ;; Registers used:
   760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   766 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;Total ram usage:        2 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 1
   773 ;; This function calls:
   774 ;;		_gpio_pin_write_logic
   775 ;; This function is called by:
   776 ;;		_lcd_4bit_send_command
   777 ;;		_lcd_4bit_send_char_data
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           	psect	text5
   782   0014FE                     __ptext5:
   783                           	callstack 0
   784   0014FE                     _lcd_4bit_send_enable_signal:
   785                           	callstack 26
   786   0014FE  2835               	incf	lcd_4bit_send_enable_signal@_lcd_^0,w,c
   787   001500  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
   788   001502  0E01               	movlw	1
   789   001504  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
   790   001506  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
   791   00150A                     
   792                           ;ECU_Layer/LCD/ecu_lcd.c: 455:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
   793   00150A  D000               	nop2		;2 cycle nop
   794   00150C  D000               	nop2		;2 cycle nop
   795   00150E  0000               	nop	
   796   001510                     
   797                           ;ECU_Layer/LCD/ecu_lcd.c: 456:     ret = gpio_pin_write_logic(&(_lcd_->lcd_en), GPIO_LOW
      +                          );
   798   001510  2835               	incf	lcd_4bit_send_enable_signal@_lcd_^0,w,c
   799   001512  6E2D               	movwf	gpio_pin_write_logic@_pin_config^0,c
   800   001514  0E00               	movlw	0
   801   001516  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
   802   001518  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
   803   00151C  6E36               	movwf	lcd_4bit_send_enable_signal@ret^0,c
   804                           
   805                           ;ECU_Layer/LCD/ecu_lcd.c: 457:     return ret;
   806   00151E  5036               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
   807   001520  0012               	return		;funcret
   808   001522                     __end_of_lcd_4bit_send_enable_signal:
   809                           	callstack 0
   810                           
   811 ;; *************** function _keypad_initialize *****************
   812 ;; Defined at:
   813 ;;		line 23 in file "ECU_Layer/Keypad/ecu_keypad.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  _keypad_obj     1   11[COMRAM] PTR const struct .
   816 ;;		 -> keypad1(8), 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  columns_coun    1   14[COMRAM] unsigned char 
   819 ;;  rows_counter    1   13[COMRAM] unsigned char 
   820 ;;  ret             1   12[COMRAM] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      unsigned char 
   823 ;; Registers used:
   824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   830 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;Total ram usage:        4 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; Hardware stack levels required when called: 2
   837 ;; This function calls:
   838 ;;		_gpio_pin_direction_intialize
   839 ;;		_gpio_pin_intialize
   840 ;; This function is called by:
   841 ;;		_application_intialize
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text6
   846   001336                     __ptext6:
   847                           	callstack 0
   848   001336                     _keypad_initialize:
   849                           	callstack 27
   850   001336                     
   851                           ;ECU_Layer/Keypad/ecu_keypad.c: 25:     uint8 rows_counter = 0, columns_counter = 0;
   852   001336  0E00               	movlw	0
   853   001338  6E3A               	movwf	keypad_initialize@rows_counter^0,c
   854   00133A  0E00               	movlw	0
   855   00133C  6E3B               	movwf	keypad_initialize@columns_counter^0,c
   856                           
   857                           ;ECU_Layer/Keypad/ecu_keypad.c: 26:     if(((void*)0) == _keypad_obj){
   858   00133E  5038               	movf	keypad_initialize@_keypad_obj^0,w,c
   859   001340  A4D8               	btfss	status,2,c
   860   001342  EFA5  F009         	goto	u841
   861   001346  EFA7  F009         	goto	u840
   862   00134A                     u841:
   863   00134A  EFAB  F009         	goto	l1804
   864   00134E                     u840:
   865   00134E                     
   866                           ;ECU_Layer/Keypad/ecu_keypad.c: 27:         ret = (Std_ReturnType)0x00;
   867   00134E  0E00               	movlw	0
   868   001350  6E39               	movwf	keypad_initialize@ret^0,c
   869                           
   870                           ;ECU_Layer/Keypad/ecu_keypad.c: 28:     }
   871   001352  EFCD  F009         	goto	l1828
   872   001356                     l1804:
   873                           
   874                           ;ECU_Layer/Keypad/ecu_keypad.c: 30:         for(rows_counter = 0 ; rows_counter < 4 ; ro
      +                          ws_counter++){
   875   001356  0E00               	movlw	0
   876   001358  6E3A               	movwf	keypad_initialize@rows_counter^0,c
   877   00135A                     l1810:
   878   00135A  5038               	movf	keypad_initialize@_keypad_obj^0,w,c
   879   00135C  243A               	addwf	keypad_initialize@rows_counter^0,w,c
   880   00135E  6E35               	movwf	gpio_pin_intialize@_pin_config^0,c
   881   001360  ECCF  F009         	call	_gpio_pin_intialize	;wreg free
   882   001364                     
   883                           ;ECU_Layer/Keypad/ecu_keypad.c: 32:         }
   884   001364  2A3A               	incf	keypad_initialize@rows_counter^0,f,c
   885   001366  0E03               	movlw	3
   886   001368  643A               	cpfsgt	keypad_initialize@rows_counter^0,c
   887   00136A  EFB9  F009         	goto	u851
   888   00136E  EFBB  F009         	goto	u850
   889   001372                     u851:
   890   001372  EFAD  F009         	goto	l1810
   891   001376                     u850:
   892   001376                     
   893                           ;ECU_Layer/Keypad/ecu_keypad.c: 33:         for(columns_counter = 0 ; columns_counter < 
      +                          4 ; columns_counter++){
   894   001376  0E00               	movlw	0
   895   001378  6E3B               	movwf	keypad_initialize@columns_counter^0,c
   896   00137A                     l1822:
   897                           
   898                           ;ECU_Layer/Keypad/ecu_keypad.c: 34:             ret = gpio_pin_direction_intialize(&(_ke
      +                          ypad_obj->keypad_column_pins[columns_counter]));
   899   00137A  5038               	movf	keypad_initialize@_keypad_obj^0,w,c
   900   00137C  243B               	addwf	keypad_initialize@columns_counter^0,w,c
   901   00137E  0F04               	addlw	4
   902   001380  6E2D               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
   903   001382  EC0B  F008         	call	_gpio_pin_direction_intialize	;wreg free
   904   001386  6E39               	movwf	keypad_initialize@ret^0,c
   905   001388                     
   906                           ;ECU_Layer/Keypad/ecu_keypad.c: 35:         }
   907   001388  2A3B               	incf	keypad_initialize@columns_counter^0,f,c
   908   00138A  0E03               	movlw	3
   909   00138C  643B               	cpfsgt	keypad_initialize@columns_counter^0,c
   910   00138E  EFCB  F009         	goto	u861
   911   001392  EFCD  F009         	goto	u860
   912   001396                     u861:
   913   001396  EFBD  F009         	goto	l1822
   914   00139A                     u860:
   915   00139A                     l1828:
   916                           
   917                           ;ECU_Layer/Keypad/ecu_keypad.c: 37:     return ret;
   918   00139A  5039               	movf	keypad_initialize@ret^0,w,c
   919   00139C  0012               	return		;funcret
   920   00139E                     __end_of_keypad_initialize:
   921                           	callstack 0
   922                           
   923 ;; *************** function _gpio_pin_intialize *****************
   924 ;; Defined at:
   925 ;;		line 54 in file "MCAL_Layer/GPIO/hel_gpio.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  _pin_config     1    8[COMRAM] PTR const struct .
   928 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), keypad1$keypad_row_pins(4), keypad1(8), 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  ret             1   10[COMRAM] unsigned char 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      unsigned char 
   933 ;; Registers used:
   934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   940 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   943 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;Total ram usage:        3 bytes
   945 ;; Hardware stack levels used: 1
   946 ;; Hardware stack levels required when called: 1
   947 ;; This function calls:
   948 ;;		_gpio_pin_direction_intialize
   949 ;;		_gpio_pin_write_logic
   950 ;; This function is called by:
   951 ;;		_keypad_initialize
   952 ;;		_lcd_4bit_initialize
   953 ;;		_lcd_8bit_initialize
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text7
   958   00139E                     __ptext7:
   959                           	callstack 0
   960   00139E                     _gpio_pin_intialize:
   961                           	callstack 27
   962   00139E                     
   963                           ;MCAL_Layer/GPIO/hel_gpio.c: 56:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
   964   00139E  5035               	movf	gpio_pin_intialize@_pin_config^0,w,c
   965   0013A0  B4D8               	btfsc	status,2,c
   966   0013A2  EFD5  F009         	goto	u791
   967   0013A6  EFD7  F009         	goto	u790
   968   0013AA                     u791:
   969   0013AA  EFE7  F009         	goto	l1738
   970   0013AE                     u790:
   971   0013AE  5035               	movf	gpio_pin_intialize@_pin_config^0,w,c
   972   0013B0  6ED9               	movwf	fsr2l,c
   973   0013B2  6ADA               	clrf	fsr2h,c
   974   0013B4  30DF               	rrcf	223,w,c
   975   0013B6  32E8               	rrcf	wreg,f,c
   976   0013B8  32E8               	rrcf	wreg,f,c
   977   0013BA  0B07               	andlw	7
   978   0013BC  6E36               	movwf	??_gpio_pin_intialize^0,c
   979   0013BE  0E07               	movlw	7
   980   0013C0  6436               	cpfsgt	??_gpio_pin_intialize^0,c
   981   0013C2  EFE5  F009         	goto	u801
   982   0013C6  EFE7  F009         	goto	u800
   983   0013CA                     u801:
   984   0013CA  EFEB  F009         	goto	l1740
   985   0013CE                     u800:
   986   0013CE                     l1738:
   987                           
   988                           ;MCAL_Layer/GPIO/hel_gpio.c: 57:         ret = (Std_ReturnType)0x00;
   989   0013CE  0E00               	movlw	0
   990   0013D0  6E37               	movwf	gpio_pin_intialize@ret^0,c
   991                           
   992                           ;MCAL_Layer/GPIO/hel_gpio.c: 58:     }
   993   0013D2  EFFC  F009         	goto	l1742
   994   0013D6                     l1740:
   995                           
   996                           ;MCAL_Layer/GPIO/hel_gpio.c: 60:         ret = gpio_pin_direction_intialize(_pin_config)
      +                          ;
   997   0013D6  C035  F02D         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
   998   0013DA  EC0B  F008         	call	_gpio_pin_direction_intialize	;wreg free
   999   0013DE  6E37               	movwf	gpio_pin_intialize@ret^0,c
  1000                           
  1001                           ;MCAL_Layer/GPIO/hel_gpio.c: 61:         ret = gpio_pin_write_logic(_pin_config, _pin_co
      +                          nfig->logic);
  1002   0013E0  C035  F02D         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
  1003   0013E4  5035               	movf	gpio_pin_intialize@_pin_config^0,w,c
  1004   0013E6  6ED9               	movwf	fsr2l,c
  1005   0013E8  6ADA               	clrf	fsr2h,c
  1006   0013EA  0E00               	movlw	0
  1007   0013EC  BEDF               	btfsc	indf2,7,c
  1008   0013EE  0E01               	movlw	1
  1009   0013F0  6E2E               	movwf	gpio_pin_write_logic@logic^0,c
  1010   0013F2  EC9E  F008         	call	_gpio_pin_write_logic	;wreg free
  1011   0013F6  6E37               	movwf	gpio_pin_intialize@ret^0,c
  1012   0013F8                     l1742:
  1013                           
  1014                           ;MCAL_Layer/GPIO/hel_gpio.c: 63:     return ret;
  1015   0013F8  5037               	movf	gpio_pin_intialize@ret^0,w,c
  1016   0013FA  0012               	return		;funcret
  1017   0013FC                     __end_of_gpio_pin_intialize:
  1018                           	callstack 0
  1019                           
  1020 ;; *************** function _gpio_pin_write_logic *****************
  1021 ;; Defined at:
  1022 ;;		line 97 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1025 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), keypad1$keypad_row_pins(4), keypad1(8), 
  1026 ;;  logic           1    1[COMRAM] enum E2981
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  ret             1    7[COMRAM] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      unsigned char 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;Total ram usage:        8 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_gpio_pin_intialize
  1048 ;;		_lcd_4bit_send_command
  1049 ;;		_lcd_send_4bits
  1050 ;;		_lcd_4bit_send_enable_signal
  1051 ;;		_keypad_get_value
  1052 ;;		_lcd_4bit_send_char_data
  1053 ;;		_lcd_8bit_send_command
  1054 ;;		_lcd_8bit_send_char_data
  1055 ;;		_lcd_8bit_send_enable_signal
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text8
  1060   00113C                     __ptext8:
  1061                           	callstack 0
  1062   00113C                     _gpio_pin_write_logic:
  1063                           	callstack 26
  1064   00113C                     
  1065                           ;MCAL_Layer/GPIO/hel_gpio.c: 98:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1066   00113C  0E01               	movlw	1
  1067   00113E  6E34               	movwf	gpio_pin_write_logic@ret^0,c
  1068                           
  1069                           ;MCAL_Layer/GPIO/hel_gpio.c: 99:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1070   001140  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1071   001142  B4D8               	btfsc	status,2,c
  1072   001144  EFA6  F008         	goto	u691
  1073   001148  EFA8  F008         	goto	u690
  1074   00114C                     u691:
  1075   00114C  EFB8  F008         	goto	l1672
  1076   001150                     u690:
  1077   001150  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1078   001152  6ED9               	movwf	fsr2l,c
  1079   001154  6ADA               	clrf	fsr2h,c
  1080   001156  30DF               	rrcf	223,w,c
  1081   001158  32E8               	rrcf	wreg,f,c
  1082   00115A  32E8               	rrcf	wreg,f,c
  1083   00115C  0B07               	andlw	7
  1084   00115E  6E2F               	movwf	??_gpio_pin_write_logic^0,c
  1085   001160  0E07               	movlw	7
  1086   001162  642F               	cpfsgt	??_gpio_pin_write_logic^0,c
  1087   001164  EFB6  F008         	goto	u701
  1088   001168  EFB8  F008         	goto	u700
  1089   00116C                     u701:
  1090   00116C  EF0F  F009         	goto	l1680
  1091   001170                     u700:
  1092   001170                     l1672:
  1093                           
  1094                           ;MCAL_Layer/GPIO/hel_gpio.c: 100:         ret = (Std_ReturnType)0x00;
  1095   001170  0E00               	movlw	0
  1096   001172  6E34               	movwf	gpio_pin_write_logic@ret^0,c
  1097                           
  1098                           ;MCAL_Layer/GPIO/hel_gpio.c: 101:     }
  1099   001174  EF24  F009         	goto	l1682
  1100   001178                     l1674:
  1101                           
  1102                           ;MCAL_Layer/GPIO/hel_gpio.c: 105:                 (*lat_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  1103   001178  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1104   00117A  6ED9               	movwf	fsr2l,c
  1105   00117C  6ADA               	clrf	fsr2h,c
  1106   00117E  30DF               	rrcf	223,w,c
  1107   001180  32E8               	rrcf	wreg,f,c
  1108   001182  32E8               	rrcf	wreg,f,c
  1109   001184  0B07               	andlw	7
  1110   001186  6E2F               	movwf	??_gpio_pin_write_logic^0,c
  1111   001188  0E01               	movlw	1
  1112   00118A  6E30               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1113   00118C  2A2F               	incf	??_gpio_pin_write_logic^0,f,c
  1114   00118E  EFCB  F008         	goto	u714
  1115   001192                     u715:
  1116   001192  90D8               	bcf	status,0,c
  1117   001194  3630               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1118   001196                     u714:
  1119   001196  2E2F               	decfsz	??_gpio_pin_write_logic^0,f,c
  1120   001198  EFC9  F008         	goto	u715
  1121   00119C  5030               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1122   00119E  0AFF               	xorlw	255
  1123   0011A0  6E31               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1124   0011A2  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1125   0011A4  6ED9               	movwf	fsr2l,c
  1126   0011A6  6ADA               	clrf	fsr2h,c
  1127   0011A8  50DF               	movf	223,w,c
  1128   0011AA  0B07               	andlw	7
  1129   0011AC  0D02               	mullw	2
  1130   0011AE  50F3               	movf	243,w,c
  1131   0011B0  0F0B               	addlw	low _lat_registers
  1132   0011B2  6ED9               	movwf	fsr2l,c
  1133   0011B4  6ADA               	clrf	fsr2h,c
  1134   0011B6  CFDE F032          	movff	postinc2,??_gpio_pin_write_logic+3
  1135   0011BA  CFDD F033          	movff	postdec2,??_gpio_pin_write_logic+4
  1136   0011BE  C032  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1137   0011C2  C033  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1138   0011C6  5031               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1139   0011C8  16DF               	andwf	indf2,f,c
  1140                           
  1141                           ;MCAL_Layer/GPIO/hel_gpio.c: 106:                 break;
  1142   0011CA  EF24  F009         	goto	l1682
  1143   0011CE                     l1676:
  1144                           
  1145                           ;MCAL_Layer/GPIO/hel_gpio.c: 108:                 (*lat_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  1146   0011CE  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1147   0011D0  6ED9               	movwf	fsr2l,c
  1148   0011D2  6ADA               	clrf	fsr2h,c
  1149   0011D4  30DF               	rrcf	223,w,c
  1150   0011D6  32E8               	rrcf	wreg,f,c
  1151   0011D8  32E8               	rrcf	wreg,f,c
  1152   0011DA  0B07               	andlw	7
  1153   0011DC  6E2F               	movwf	??_gpio_pin_write_logic^0,c
  1154   0011DE  0E01               	movlw	1
  1155   0011E0  6E30               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1156   0011E2  2A2F               	incf	??_gpio_pin_write_logic^0,f,c
  1157   0011E4  EFF6  F008         	goto	u724
  1158   0011E8                     u725:
  1159   0011E8  90D8               	bcf	status,0,c
  1160   0011EA  3630               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1161   0011EC                     u724:
  1162   0011EC  2E2F               	decfsz	??_gpio_pin_write_logic^0,f,c
  1163   0011EE  EFF4  F008         	goto	u725
  1164   0011F2  502D               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1165   0011F4  6ED9               	movwf	fsr2l,c
  1166   0011F6  6ADA               	clrf	fsr2h,c
  1167   0011F8  50DF               	movf	223,w,c
  1168   0011FA  0B07               	andlw	7
  1169   0011FC  0D02               	mullw	2
  1170   0011FE  50F3               	movf	243,w,c
  1171   001200  0F0B               	addlw	low _lat_registers
  1172   001202  6ED9               	movwf	fsr2l,c
  1173   001204  6ADA               	clrf	fsr2h,c
  1174   001206  CFDE F031          	movff	postinc2,??_gpio_pin_write_logic+2
  1175   00120A  CFDD F032          	movff	postdec2,??_gpio_pin_write_logic+3
  1176   00120E  C031  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1177   001212  C032  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1178   001216  5030               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1179   001218  12DF               	iorwf	indf2,f,c
  1180                           
  1181                           ;MCAL_Layer/GPIO/hel_gpio.c: 109:                 break;
  1182   00121A  EF24  F009         	goto	l1682
  1183   00121E                     l1680:
  1184   00121E  502E               	movf	gpio_pin_write_logic@logic^0,w,c
  1185   001220  6E2F               	movwf	??_gpio_pin_write_logic^0,c
  1186   001222  6A30               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1187                           
  1188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1189                           ; Switch size 1, requested type "simple"
  1190                           ; Number of cases is 1, Range of values is 0 to 0
  1191                           ; switch strategies available:
  1192                           ; Name         Instructions Cycles
  1193                           ; simple_byte            4     3 (average)
  1194                           ;	Chosen strategy is simple_byte
  1195   001224  5030               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1196   001226  0A00               	xorlw	0	; case 0
  1197   001228  B4D8               	btfsc	status,2,c
  1198   00122A  EF19  F009         	goto	l2186
  1199   00122E  EFB8  F008         	goto	l1672
  1200   001232                     l2186:
  1201                           
  1202                           ; Switch size 1, requested type "simple"
  1203                           ; Number of cases is 2, Range of values is 0 to 1
  1204                           ; switch strategies available:
  1205                           ; Name         Instructions Cycles
  1206                           ; simple_byte            7     4 (average)
  1207                           ;	Chosen strategy is simple_byte
  1208   001232  502F               	movf	??_gpio_pin_write_logic^0,w,c
  1209   001234  0A00               	xorlw	0	; case 0
  1210   001236  B4D8               	btfsc	status,2,c
  1211   001238  EFBC  F008         	goto	l1674
  1212   00123C  0A01               	xorlw	1	; case 1
  1213   00123E  B4D8               	btfsc	status,2,c
  1214   001240  EFE7  F008         	goto	l1676
  1215   001244  EFB8  F008         	goto	l1672
  1216   001248                     l1682:
  1217                           
  1218                           ;MCAL_Layer/GPIO/hel_gpio.c: 113:     return ret;
  1219   001248  5034               	movf	gpio_pin_write_logic@ret^0,w,c
  1220   00124A  0012               	return		;funcret
  1221   00124C                     __end_of_gpio_pin_write_logic:
  1222                           	callstack 0
  1223                           
  1224 ;; *************** function _gpio_pin_direction_intialize *****************
  1225 ;; Defined at:
  1226 ;;		line 26 in file "MCAL_Layer/GPIO/hel_gpio.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1229 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), keypad1$keypad_column_pins(4), keypad1$keypad_row_pins(4), 
  1230 ;;		 -> keypad1(8), 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  ret             1    6[COMRAM] unsigned char 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      unsigned char 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1242 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;Total ram usage:        7 bytes
  1247 ;; Hardware stack levels used: 1
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_gpio_pin_intialize
  1252 ;;		_keypad_initialize
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text9
  1257   001016                     __ptext9:
  1258                           	callstack 0
  1259   001016                     _gpio_pin_direction_intialize:
  1260                           	callstack 27
  1261   001016                     
  1262                           ;MCAL_Layer/GPIO/hel_gpio.c: 27:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1263   001016  0E01               	movlw	1
  1264   001018  6E33               	movwf	gpio_pin_direction_intialize@ret^0,c
  1265                           
  1266                           ;MCAL_Layer/GPIO/hel_gpio.c: 28:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1){
  1267   00101A  502D               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1268   00101C  B4D8               	btfsc	status,2,c
  1269   00101E  EF13  F008         	goto	u731
  1270   001022  EF15  F008         	goto	u730
  1271   001026                     u731:
  1272   001026  EF25  F008         	goto	l1694
  1273   00102A                     u730:
  1274   00102A  502D               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1275   00102C  6ED9               	movwf	fsr2l,c
  1276   00102E  6ADA               	clrf	fsr2h,c
  1277   001030  30DF               	rrcf	223,w,c
  1278   001032  32E8               	rrcf	wreg,f,c
  1279   001034  32E8               	rrcf	wreg,f,c
  1280   001036  0B07               	andlw	7
  1281   001038  6E2E               	movwf	??_gpio_pin_direction_intialize^0,c
  1282   00103A  0E07               	movlw	7
  1283   00103C  642E               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1284   00103E  EF23  F008         	goto	u741
  1285   001042  EF25  F008         	goto	u740
  1286   001046                     u741:
  1287   001046  EF7C  F008         	goto	l1702
  1288   00104A                     u740:
  1289   00104A                     l1694:
  1290                           
  1291                           ;MCAL_Layer/GPIO/hel_gpio.c: 29:         ret = (Std_ReturnType)0x00;
  1292   00104A  0E00               	movlw	0
  1293   00104C  6E33               	movwf	gpio_pin_direction_intialize@ret^0,c
  1294                           
  1295                           ;MCAL_Layer/GPIO/hel_gpio.c: 30:     }
  1296   00104E  EF9C  F008         	goto	l1704
  1297   001052                     l1696:
  1298                           
  1299                           ;MCAL_Layer/GPIO/hel_gpio.c: 34:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8) 1 << _pin_config->pin));
  1300   001052  502D               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1301   001054  6ED9               	movwf	fsr2l,c
  1302   001056  6ADA               	clrf	fsr2h,c
  1303   001058  30DF               	rrcf	223,w,c
  1304   00105A  32E8               	rrcf	wreg,f,c
  1305   00105C  32E8               	rrcf	wreg,f,c
  1306   00105E  0B07               	andlw	7
  1307   001060  6E2E               	movwf	??_gpio_pin_direction_intialize^0,c
  1308   001062  0E01               	movlw	1
  1309   001064  6E2F               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1310   001066  2A2E               	incf	??_gpio_pin_direction_intialize^0,f,c
  1311   001068  EF38  F008         	goto	u754
  1312   00106C                     u755:
  1313   00106C  90D8               	bcf	status,0,c
  1314   00106E  362F               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1315   001070                     u754:
  1316   001070  2E2E               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1317   001072  EF36  F008         	goto	u755
  1318   001076  502F               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1319   001078  0AFF               	xorlw	255
  1320   00107A  6E30               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1321   00107C  502D               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1322   00107E  6ED9               	movwf	fsr2l,c
  1323   001080  6ADA               	clrf	fsr2h,c
  1324   001082  50DF               	movf	223,w,c
  1325   001084  0B07               	andlw	7
  1326   001086  0D02               	mullw	2
  1327   001088  50F3               	movf	243,w,c
  1328   00108A  0F15               	addlw	low _tris_registers
  1329   00108C  6ED9               	movwf	fsr2l,c
  1330   00108E  6ADA               	clrf	fsr2h,c
  1331   001090  CFDE F031          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1332   001094  CFDD F032          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1333   001098  C031  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1334   00109C  C032  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1335   0010A0  5030               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1336   0010A2  16DF               	andwf	indf2,f,c
  1337                           
  1338                           ;MCAL_Layer/GPIO/hel_gpio.c: 35:                 break;
  1339   0010A4  EF9C  F008         	goto	l1704
  1340   0010A8                     l1698:
  1341                           
  1342                           ;MCAL_Layer/GPIO/hel_gpio.c: 37:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8) 1 << _pin_config->pin));
  1343   0010A8  502D               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1344   0010AA  6ED9               	movwf	fsr2l,c
  1345   0010AC  6ADA               	clrf	fsr2h,c
  1346   0010AE  30DF               	rrcf	223,w,c
  1347   0010B0  32E8               	rrcf	wreg,f,c
  1348   0010B2  32E8               	rrcf	wreg,f,c
  1349   0010B4  0B07               	andlw	7
  1350   0010B6  6E2E               	movwf	??_gpio_pin_direction_intialize^0,c
  1351   0010B8  0E01               	movlw	1
  1352   0010BA  6E2F               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1353   0010BC  2A2E               	incf	??_gpio_pin_direction_intialize^0,f,c
  1354   0010BE  EF63  F008         	goto	u764
  1355   0010C2                     u765:
  1356   0010C2  90D8               	bcf	status,0,c
  1357   0010C4  362F               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1358   0010C6                     u764:
  1359   0010C6  2E2E               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1360   0010C8  EF61  F008         	goto	u765
  1361   0010CC  502D               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1362   0010CE  6ED9               	movwf	fsr2l,c
  1363   0010D0  6ADA               	clrf	fsr2h,c
  1364   0010D2  50DF               	movf	223,w,c
  1365   0010D4  0B07               	andlw	7
  1366   0010D6  0D02               	mullw	2
  1367   0010D8  50F3               	movf	243,w,c
  1368   0010DA  0F15               	addlw	low _tris_registers
  1369   0010DC  6ED9               	movwf	fsr2l,c
  1370   0010DE  6ADA               	clrf	fsr2h,c
  1371   0010E0  CFDE F030          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1372   0010E4  CFDD F031          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1373   0010E8  C030  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1374   0010EC  C031  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1375   0010F0  502F               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1376   0010F2  12DF               	iorwf	indf2,f,c
  1377                           
  1378                           ;MCAL_Layer/GPIO/hel_gpio.c: 38:                 break;
  1379   0010F4  EF9C  F008         	goto	l1704
  1380   0010F8                     l1702:
  1381   0010F8  502D               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1382   0010FA  6ED9               	movwf	fsr2l,c
  1383   0010FC  6ADA               	clrf	fsr2h,c
  1384   0010FE  BCDF               	btfsc	indf2,6,c
  1385   001100  EF84  F008         	goto	u771
  1386   001104  EF87  F008         	goto	u770
  1387   001108                     u771:
  1388   001108  0E01               	movlw	1
  1389   00110A  EF88  F008         	goto	u780
  1390   00110E                     u770:
  1391   00110E  0E00               	movlw	0
  1392   001110                     u780:
  1393   001110  6E2E               	movwf	??_gpio_pin_direction_intialize^0,c
  1394   001112  6A2F               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  1395                           
  1396                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1397                           ; Switch size 1, requested type "simple"
  1398                           ; Number of cases is 1, Range of values is 0 to 0
  1399                           ; switch strategies available:
  1400                           ; Name         Instructions Cycles
  1401                           ; simple_byte            4     3 (average)
  1402                           ;	Chosen strategy is simple_byte
  1403   001114  502F               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1404   001116  0A00               	xorlw	0	; case 0
  1405   001118  B4D8               	btfsc	status,2,c
  1406   00111A  EF91  F008         	goto	l2188
  1407   00111E  EF25  F008         	goto	l1694
  1408   001122                     l2188:
  1409                           
  1410                           ; Switch size 1, requested type "simple"
  1411                           ; Number of cases is 2, Range of values is 0 to 1
  1412                           ; switch strategies available:
  1413                           ; Name         Instructions Cycles
  1414                           ; simple_byte            7     4 (average)
  1415                           ;	Chosen strategy is simple_byte
  1416   001122  502E               	movf	??_gpio_pin_direction_intialize^0,w,c
  1417   001124  0A00               	xorlw	0	; case 0
  1418   001126  B4D8               	btfsc	status,2,c
  1419   001128  EF29  F008         	goto	l1696
  1420   00112C  0A01               	xorlw	1	; case 1
  1421   00112E  B4D8               	btfsc	status,2,c
  1422   001130  EF54  F008         	goto	l1698
  1423   001134  EF25  F008         	goto	l1694
  1424   001138                     l1704:
  1425                           
  1426                           ;MCAL_Layer/GPIO/hel_gpio.c: 42:     return ret;
  1427   001138  5033               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1428   00113A  0012               	return		;funcret
  1429   00113C                     __end_of_gpio_pin_direction_intialize:
  1430                           	callstack 0
  1431                           
  1432                           	psect	rparam
  1433   000000                     
  1434                           	psect	config
  1435                           
  1436                           ; Padding undefined space
  1437   300000                     	org	3145728
  1438   300000  FF                 	db	255
  1439                           
  1440                           ;Config register CONFIG1H @ 0x300001
  1441                           ;	Oscillator Selection bits
  1442                           ;	OSC = HS, HS oscillator
  1443                           ;	Fail-Safe Clock Monitor Enable bit
  1444                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1445                           ;	Internal/External Oscillator Switchover bit
  1446                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1447   300001                     	org	3145729
  1448   300001  02                 	db	2
  1449                           
  1450                           ;Config register CONFIG2L @ 0x300002
  1451                           ;	Power-up Timer Enable bit
  1452                           ;	PWRT = OFF, PWRT disabled
  1453                           ;	Brown-out Reset Enable bits
  1454                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1455                           ;	Brown Out Reset Voltage bits
  1456                           ;	BORV = 1, 
  1457   300002                     	org	3145730
  1458   300002  09                 	db	9
  1459                           
  1460                           ;Config register CONFIG2H @ 0x300003
  1461                           ;	Watchdog Timer Enable bit
  1462                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1463                           ;	Watchdog Timer Postscale Select bits
  1464                           ;	WDTPS = 32768, 1:32768
  1465   300003                     	org	3145731
  1466   300003  1E                 	db	30
  1467                           
  1468                           ; Padding undefined space
  1469   300004                     	org	3145732
  1470   300004  FF                 	db	255
  1471                           
  1472                           ;Config register CONFIG3H @ 0x300005
  1473                           ;	CCP2 MUX bit
  1474                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1475                           ;	PORTB A/D Enable bit
  1476                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1477                           ;	Low-Power Timer1 Oscillator Enable bit
  1478                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1479                           ;	MCLR Pin Enable bit
  1480                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1481   300005                     	org	3145733
  1482   300005  81                 	db	129
  1483                           
  1484                           ;Config register CONFIG4L @ 0x300006
  1485                           ;	Stack Full/Underflow Reset Enable bit
  1486                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1487                           ;	Single-Supply ICSP Enable bit
  1488                           ;	LVP = OFF, Single-Supply ICSP disabled
  1489                           ;	Extended Instruction Set Enable bit
  1490                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1491                           ;	Background Debugger Enable bit
  1492                           ;	DEBUG = 0x1, unprogrammed default
  1493   300006                     	org	3145734
  1494   300006  81                 	db	129
  1495                           
  1496                           ; Padding undefined space
  1497   300007                     	org	3145735
  1498   300007  FF                 	db	255
  1499                           
  1500                           ;Config register CONFIG5L @ 0x300008
  1501                           ;	Code Protection bit
  1502                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1503                           ;	Code Protection bit
  1504                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1505                           ;	Code Protection bit
  1506                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1507                           ;	Code Protection bit
  1508                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1509   300008                     	org	3145736
  1510   300008  0F                 	db	15
  1511                           
  1512                           ;Config register CONFIG5H @ 0x300009
  1513                           ;	Boot Block Code Protection bit
  1514                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1515                           ;	Data EEPROM Code Protection bit
  1516                           ;	CPD = OFF, Data EEPROM not code-protected
  1517   300009                     	org	3145737
  1518   300009  C0                 	db	192
  1519                           
  1520                           ;Config register CONFIG6L @ 0x30000A
  1521                           ;	Write Protection bit
  1522                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1523                           ;	Write Protection bit
  1524                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1525                           ;	Write Protection bit
  1526                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1527                           ;	Write Protection bit
  1528                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1529   30000A                     	org	3145738
  1530   30000A  0F                 	db	15
  1531                           
  1532                           ;Config register CONFIG6H @ 0x30000B
  1533                           ;	Configuration Register Write Protection bit
  1534                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1535                           ;	Boot Block Write Protection bit
  1536                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1537                           ;	Data EEPROM Write Protection bit
  1538                           ;	WRTD = OFF, Data EEPROM not write-protected
  1539   30000B                     	org	3145739
  1540   30000B  E0                 	db	224
  1541                           
  1542                           ;Config register CONFIG7L @ 0x30000C
  1543                           ;	Table Read Protection bit
  1544                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1545                           ;	Table Read Protection bit
  1546                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1547                           ;	Table Read Protection bit
  1548                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1549                           ;	Table Read Protection bit
  1550                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1551   30000C                     	org	3145740
  1552   30000C  0F                 	db	15
  1553                           
  1554                           ;Config register CONFIG7H @ 0x30000D
  1555                           ;	Boot Block Table Read Protection bit
  1556                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1557   30000D                     	org	3145741
  1558   30000D  40                 	db	64
  1559                           tosu	equ	0xFFF
  1560                           tosh	equ	0xFFE
  1561                           tosl	equ	0xFFD
  1562                           stkptr	equ	0xFFC
  1563                           pclatu	equ	0xFFB
  1564                           pclath	equ	0xFFA
  1565                           pcl	equ	0xFF9
  1566                           tblptru	equ	0xFF8
  1567                           tblptrh	equ	0xFF7
  1568                           tblptrl	equ	0xFF6
  1569                           tablat	equ	0xFF5
  1570                           prodh	equ	0xFF4
  1571                           prodl	equ	0xFF3
  1572                           indf0	equ	0xFEF
  1573                           postinc0	equ	0xFEE
  1574                           postdec0	equ	0xFED
  1575                           preinc0	equ	0xFEC
  1576                           plusw0	equ	0xFEB
  1577                           fsr0h	equ	0xFEA
  1578                           fsr0l	equ	0xFE9
  1579                           wreg	equ	0xFE8
  1580                           indf1	equ	0xFE7
  1581                           postinc1	equ	0xFE6
  1582                           postdec1	equ	0xFE5
  1583                           preinc1	equ	0xFE4
  1584                           plusw1	equ	0xFE3
  1585                           fsr1h	equ	0xFE2
  1586                           fsr1l	equ	0xFE1
  1587                           bsr	equ	0xFE0
  1588                           indf2	equ	0xFDF
  1589                           postinc2	equ	0xFDE
  1590                           postdec2	equ	0xFDD
  1591                           preinc2	equ	0xFDC
  1592                           plusw2	equ	0xFDB
  1593                           fsr2h	equ	0xFDA
  1594                           fsr2l	equ	0xFD9
  1595                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        44
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     18      62
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad1(COMRAM[8]), keypad1$keypad_column_pins(COMRAM[4]), keypad1$keypad_row_pins(COMRAM[4]), lcd_1(COMRAM[6]), 
		 -> lcd_1$lcd_data(COMRAM[4]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad1(COMRAM[8]), keypad1$keypad_row_pins(COMRAM[4]), lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 8
		 -> keypad1(COMRAM[8]), keypad1$keypad_row_pins(COMRAM[4]), lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), 

    keypad_initialize@_keypad_obj	PTR const struct . size(1) Largest target is 8
		 -> keypad1(COMRAM[8]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_send_4bits@_lcd_	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    S972$buffer	PTR unsigned char  size(2) Largest target is 0

    S972$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _application_intialize->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _keypad_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   20438
              _application_intialize
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0   20437
                  _keypad_initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_initialize                                  4     3      1   16035
                                             14 COMRAM     4     3      1
                 _gpio_pin_intialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   11806
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       3     1      2    3574
                                              8 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    3136
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _keypad_initialize                                    4     3      1    4399
                                             11 COMRAM     4     3      1
       _gpio_pin_direction_intialize
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    3762
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    2763
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     331
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _keypad_initialize
       _gpio_pin_direction_intialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
     _lcd_4bit_initialize
       _gpio_pin_intialize
       _lcd_4bit_send_command
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     12      3E       1       48.8%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3E      39        0.0%
DATA                 0      0      3E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 15 19:41:31 2023

                        ?_lcd_send_4bits 0035                                       l21 1532  
                                     l15 1538                                       l16 1538  
                                     l71 113A                                       l78 13FA  
                                     l97 124A                                      l200 1334  
                                    l205 1456                                      l305 14A6  
                                    l308 1520                                      l157 139C  
                                    u700 1170                                      u701 116C  
                                    u800 13CE                                      u801 13CA  
                                    u730 102A                                      u714 1196  
                                    u810 140C                                      u731 1026  
                                    u715 1192                                      u811 1408  
                                    u740 104A                                      u724 11EC  
                                    u820 1260                                      u741 1046  
                                    u725 11E8                                      u821 125C  
                                    u830 129E                                      u831 129A  
                                    u840 134E                                      u841 134A  
                                    u770 110E                                      u754 1070  
                                    u690 1150                                      u850 1376  
                                    u771 1108                                      u755 106C  
                                    u691 114C                                      u851 1372  
                                    u780 1110                                      u764 10C6  
                                    u860 139A                                      u765 10C2  
                                    u861 1396                                      u790 13AE  
                                    u791 13AA                     keypad_initialize@ret 0039  
    __end_of_lcd_4bit_send_enable_signal 1522              _lcd_4bit_send_enable_signal 14FE  
                                    wreg 0FE8              lcd_send_4bits@_data_command 0036  
                                   l1702 10F8                                     l1704 1138  
                                   l1800 1336                                     l1720 148E  
                                   l1712 1458                                     l2186 1232  
                                   l1810 135A                                     l1802 134E  
                                   l1730 1510                                     l1714 1458  
                                   l2188 1122                                     l1740 13D6  
                                   l1812 1364                                     l1804 1356  
                                   l1724 14FE                                     l1716 1468  
                                   l1670 1150                                     l1742 13F8  
                                   l1734 139E                                     l1822 137A  
                                   l1814 1366                                     l1726 14FE  
                                   l1718 147A                                     l1750 1414  
                                   l1680 121E                                     l1672 1170  
                                   l1736 13AE                                     l1824 1388  
                                   l1816 1376                                     l1728 150A  
                                   l1752 1454                                     l1760 1268  
                                   l1690 1016                                     l1674 1178  
                                   l1682 1248                                     l1738 13CE  
                                   l1826 138A                                     l1746 13FC  
                                   l1770 128C                                     l1762 127C  
                                   l1692 102A                                     l1676 11CE  
                                   l1668 113C                                     l1828 139A  
                                   l1748 140C                                     l1780 12D6  
                                   l1772 128E                                     l1756 124C  
                                   l1694 104A                                     l1790 130C  
                                   l1782 12DC                                     l1774 129E  
                                   l1758 1260                                     l1696 1052  
                                   l1792 1318                                     l1784 12E8  
                                   l1776 12AE                                     l1768 1280  
                                   l1880 1522                                     l1936 1534  
                                   l1698 10A8                                     l1794 1324  
                                   l1786 12F4                                     l1778 12BA  
                                   l1882 1522                                     l1938 1534  
                                   l1788 1300                                     l1796 1332  
                                   l1884 152A                                     STR_1 1011  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   u1167 12A4                                     _LATC 0F8B  
                                   _LATD 0F8C                                     u1177 12C0  
                                   _LATE 0F8D                                     u1187 12D8  
                ??_application_intialize 003F            ??_lcd_4bit_send_enable_signal 0036  
                                   _main 1534                                     fsr2h 0FDA  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     prodl 0FF3  
                                   start 0000                             ___param_bank 0000  
                  _lcd_4bit_send_command 13FC                     _gpio_pin_write_logic 113C  
                                  ?_main 002D                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                                    _lcd_1 0027  
                                  tablat 0FF5                                    status 0FD8  
                        __initialization 14D4                             __end_of_main 1540  
                  ?_gpio_pin_write_logic 002D                            _lat_registers 000B  
                                 ??_main 003F                            __activetblptr 0002  
                 ?_lcd_4bit_send_command 0038                                   isa$std 0001  
gpio_pin_direction_intialize@_pin_config 002D                             __pdataCOMRAM 0001  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                             __accesstop 0080                  __end_of__initialization 14F4  
                          ___rparam_used 0001                         ??_lcd_send_4bits 0037  
                 ??_gpio_pin_write_logic 002F                           __pcstackCOMRAM 002D  
               lcd_4bit_send_command@ret 003A            __end_of_application_intialize 1534  
                             _btn_values 1001                           _tris_registers 0015  
 lcd_4bit_initialize@l_data_pins_counter 003D                                  __Hparam 0000  
                                __Lparam 0000         keypad_initialize@columns_counter 003B  
                           __psmallconst 1000               __end_of_gpio_pin_intialize 13FC  
                                __pcinit 14D4                                  __ramtop 1000  
                                __ptext0 1534                                  __ptext1 1522  
                                __ptext2 124C                                  __ptext3 13FC  
                                __ptext4 1458                                  __ptext5 14FE  
                                __ptext6 1336                                  __ptext7 139E  
                                __ptext8 113C                                  __ptext9 1016  
                                _keypad1 001F                     end_of_initialization 14F4  
                      lcd_send_4bits@ret 0037                            __Lmediumconst 0000  
                ??_lcd_4bit_send_command 003A                    gpio_pin_intialize@ret 0037  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
                    _lcd_4bit_initialize 124C            gpio_pin_intialize@_pin_config 0035  
   __end_of_gpio_pin_direction_intialize 113C             _gpio_pin_direction_intialize 1016  
                   ?_lcd_4bit_initialize 003B                            __pidataCOMRAM 14A8  
                    start_initialization 14D4             ?_lcd_4bit_send_enable_signal 0035  
          ?_gpio_pin_direction_intialize 002D                    ??_lcd_4bit_initialize 003C  
           lcd_4bit_send_command@command 0039          gpio_pin_direction_intialize@ret 0033  
          keypad_initialize@rows_counter 003A                    _application_intialize 1522  
       lcd_4bit_send_enable_signal@_lcd_ 0035          gpio_pin_write_logic@_pin_config 002D  
              gpio_pin_write_logic@logic 002E                              __smallconst 1000  
                     _gpio_pin_intialize 139E           ??_gpio_pin_direction_intialize 002E  
                    ?_gpio_pin_intialize 0035            __end_of_lcd_4bit_send_command 1458  
                   ??_gpio_pin_intialize 0036                      lcd_send_4bits@_lcd_ 0035  
                gpio_pin_write_logic@ret 0034                                copy_data0 14E8  
                      _keypad_initialize 1336                       ?_keypad_initialize 0038  
                 ?_application_intialize 002D                                 __Hrparam 0000  
                               __Lrparam 0000                      ??_keypad_initialize 0039  
                     __end_of_btn_values 1011                __end_of_keypad_initialize 139E  
                               isa$xinst 0000                           _lcd_send_4bits 1458  
            __end_of_lcd_4bit_initialize 1336               lcd_4bit_send_command@_lcd_ 0038  
           __end_of_gpio_pin_write_logic 124C           lcd_4bit_send_enable_signal@ret 0036  
           keypad_initialize@_keypad_obj 0038                   __end_of_lcd_send_4bits 14A8  
                         _port_registers 0001                 lcd_4bit_initialize@_lcd_ 003B  
                 lcd_4bit_initialize@ret 003E  
